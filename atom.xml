<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>秋城落叶</title>
  
  <subtitle>秋城落叶的博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-10-28T14:04:50.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>秋城落叶</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>逆向分析-消灭糖果游戏</title>
    <link href="http://yoursite.com/2018/10/28/%E9%80%86%E5%90%91%E5%88%86%E6%9E%90-%E6%B6%88%E7%81%AD%E7%B3%96%E6%9E%9C%E6%B8%B8%E6%88%8F/"/>
    <id>http://yoursite.com/2018/10/28/逆向分析-消灭糖果游戏/</id>
    <published>2018-10-28T07:22:47.000Z</published>
    <updated>2018-10-28T14:04:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>分析一个”消灭糖果”游戏APP的代码.</p><a id="more"></a><h2 id="0x01-APP预览"><a href="#0x01-APP预览" class="headerlink" title="0x01 APP预览"></a>0x01 APP预览</h2><p>首先看下危险权限.<br><img src="WX20181028-170023.png" alt=""></p><p>危险权限如SMS SEND等.</p><p>话说实在搞不懂一个消除类游戏为什么要读取通讯录和录制声音.</p><p>随后是简单看了下支付界面.</p><p><img src="Screenshot_2018-10-28-20-03-43-511_wb.gc.xmxx.zxb.png" alt=""></p><p><img src="Screenshot_2018-10-28-20-03-47-605_wb.gc.xmxx.zxb.png" alt=""></p><h2 id="0x02-开始分析"><a href="#0x02-开始分析" class="headerlink" title="0x02 开始分析"></a>0x02 开始分析</h2><p>首先干掉短信发送权限,防止玩脱.<br><img src="WX20181028-200631.png" alt=""></p><p>上面可以看到是移动支付服务,所以我们先搜一下paySuccess和payCancel.</p><p><img src="payimage.png" alt=""></p><p>可以看到是有四处调用,此处暂时还不知道此方法是否是调用处.</p><p>第一个第二个跳转到一个接口类,无实际意义.</p><p>第三个是一个类文件,貌似是上传数据,无实际意义.希望第四个可以有突破.</p><p><img src="pay1.png" alt=""></p><p>从图中可以看到,貌似是一个pay(Activity activity, final PayParams payParams)方法,里面有匿名类回调函数用于返回是否支付成功.</p><p><img src="pay2.png" alt=""></p><p>简单分析了下,我们可以看到三个回调函数,此处毫无疑问是支付返回了.<br>那么对于这三个方法,我们简单对比发现,有一个参数被修改了:<br>payParams.b(2);</p><p>此处使用b方法来设置了标志位,成功设置为0,并返回给界面回调,通过EgameAgent.this.onPayFinish(payParams);方法.</p><p>失败与取消分别是1 和 2,我们回过头来,看到上面有三个判断:<br><img src="pay3.png" alt=""></p><p>这三个unicode转码的意思如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">if (!isInited()) &#123;</span><br><span class="line">    payParams.b(-2);</span><br><span class="line">    onPayFinish(payParams);</span><br><span class="line">&#125; else if (this.mPayAgentRecord.g()) &#123;</span><br><span class="line">    payParams.b(-4);</span><br><span class="line">    payParams.b(&quot;抱歉！您的支付太频繁！&quot;);</span><br><span class="line">    onPayFinish(payParams);</span><br><span class="line">&#125; else if (this.mPayAgentRecord.c()) &#123;</span><br><span class="line">    payParams.b(-4);</span><br><span class="line">    payParams.b(&quot;支付失败，已达到当日限额！&quot;);</span><br><span class="line">    onPayFinish(payParams);</span><br><span class="line">&#125; else if (this.mPayAgentRecord.d()) &#123;</span><br><span class="line">    payParams.b(-4);</span><br><span class="line">    payParams.b(&quot;支付失败，已达到当月限额！&quot;);</span><br><span class="line">    onPayFinish(payParams);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>我们可以看到这四个判断,第一个应该是支付异常,后面三个一目了然.<br>我们如果给第一个isInited方法屏蔽掉判断,然后设置b方法值为0,然后返回是否就可以实现内购?</p><p><img src="pay4.png" alt=""></p><p>从上图可以看到,此代码位于 “EgameAgent” 类文件中.</p><p>下面就开始尝试修改实现内购.</p><h2 id="0x03-动手破解"><a href="#0x03-动手破解" class="headerlink" title="0x03 动手破解"></a>0x03 动手破解</h2><p>首先跳转到davik字节码文件对应处:<br><img src="pay5.png" alt=""></p><p>随后开始寻找关键code.<br>通过搜索unicode:\u62b1\u6b49\uff01\u60a8\u7684\u652f\u4ed8\u592a\u9891\u7e41\uff01<br>找到了关键位置.<br><img src="pay6.png" alt=""></p><p>首先寻找isInited方法,它位于BasePayAgent类中<br><img src="pay7.png" alt=""><br>当然我们可以通过让他返回false来达成目的,但我们并不需要这么做.</p><p>我们寻找到关键代码:<br><img src="pay8.png" alt=""></p><p>屏蔽掉红框内的代码,使代码逻辑结构变为:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">payParams.b(-2);</span><br><span class="line">onPayFinish(payParams);</span><br><span class="line">if (this.mPayAgentRecord.g()) &#123;</span><br><span class="line">    payParams.b(-4);</span><br><span class="line">    payParams.b(&quot;\u62b1\u6b49\uff01\u60a8\u7684\u652f\u4ed8\u592a\u9891\u7e41\uff01&quot;);</span><br><span class="line">     onPayFinish(payParams);</span><br><span class="line">&#125; else if (this.mPayAgentRecord.c()) &#123;</span><br><span class="line">     payParams.b(-4);</span><br><span class="line">     payParams.b(&quot;\u652f\u4ed8\u5931\u8d25\uff0c\u5df2\u8fbe\u5230\u5f53\u65e5\u9650\u989d\uff01&quot;);</span><br><span class="line">      onPayFinish(payParams);</span><br><span class="line">&#125; else if (this.mPayAgentRecord.d()) &#123;</span><br><span class="line">..............</span><br></pre></td></tr></table></figure></p><p><img src="pay9.png" alt=""><br>保存,编译安装.</p><p><img src="pay10.png" alt=""></p><p>可以看到,已经屏蔽掉了短信发送权限:<br><img src="Screenshot_2018-10-28-20-38-49-873_com.miui.secur.png" alt=""></p><p>我们尝试购买一个物品:<br><img src="Screenshot_2018-10-28-20-39-05-382_wb.gc.xmxx.zxb.png" alt=""></p><p>我们可以看到从219769增加到220169钻石,意为破解成功.<br><img src="pay11.png" alt=""></p><p>到此处破解内购无限钻石则成功.同时我们确保了不可能出现意外从而导致恶意扣费的问题产生.</p><p>此APP还有一个问题需要解决:有广告.</p><p><img src="Screenshot_2018-10-28-20-45-49-039_wb.gc.xmxx.zxb.png" alt=""></p><p>可以看到有一个横幅广告,非常烦人,并且他这个偶尔会弹出全屏广告,诱导用户下载恶意APP,行为诡异,需要制裁.</p><h2 id="0x04-AD-KILL"><a href="#0x04-AD-KILL" class="headerlink" title="0x04 AD KILL"></a>0x04 AD KILL</h2><p>全屏广告如图:<br><img src="Screenshot_2018-10-28-20-53-24-078_wb.gc.xmxx.zxb.png" alt=""></p><p>此广告全屏,并且无法点击其他位置来退出,只能点击中间并强制下载流氓APP.</p><p>我们简单看了下,有一个叫做AD的类.<br><img src="adclass.png" alt=""></p><p>可以看到是一个静态方法调用,可以猜到是全局唯一对象,故此处为关键位置,我们在他获取instance的时候将null返回给上层调用函数即可:</p><p><img src="pay12.png" alt=""></p><p>我们将nez改为eqz,返回null对象.我们知道null对象是空指针,他无法调用类中的对象来加载广告,从而实现屏蔽广告.</p><p>编译运行:<br><img src="Screenshot_2018-10-28-21-27-21-864_com.miui.home.png" alt=""></p><p>可以看到崩溃了,点击详情查看:<br><img src="Screenshot_2018-10-28-21-27-24-683_com.miui.bugre.png" alt=""></p><p>在一个叫ADManagerNative类中有一个方法调用了这个null对象,导致APP崩溃.我们试图解决:<br><img src="pay13.png" alt=""></p><p>可以看到此处调用了这个对象,并要求返回一个字符串.<br>于是我们屏蔽调用并使用’ const-string v0, “” ‘返回一个空字符串:<br><img src="pay14.png" alt=""></p><p>保存编译运行.<br><img src="Screenshot_2018-10-28-21-33-17-741_wb.gc.xmxx.zxb.png" alt=""><br><img src="Screenshot_2018-10-28-21-33-21-173_wb.gc.xmxx.zxb.png" alt=""></p><p>广告去除完成.<br>同时发现一个问题:在切换到后台时,会造成崩溃.需要修复:<br><img src="Screenshot_2018-10-28-21-45-22-369_com.miui.bugre.png" alt=""></p><p>我们定位到关键代码:<br><img src="pay16.png" alt=""></p><p>跳转到字节码位置:<br><img src="pay15.png" alt=""></p><p>修改判断条件,使其不调用null指针.</p><h2 id="0x04-总结"><a href="#0x04-总结" class="headerlink" title="0x04 总结"></a>0x04 总结</h2><p>从这个APP了解到了移动应用支付安全的问题,对于支付安全更要注意关键代码的隐藏与加密,本文中所出示的代码明显处于未加密状态,有一定逆向经验的人员可以轻易破解扣费机制与广告功能.</p><p>对于我来说,这个APP扩宽了我的眼界,对于移动支付平台中的扣费逻辑SDK有一个详细的了解.</p><p>文中所示的APP仅为研究学习之用. </p><h2 id="0x05-修改后的代码"><a href="#0x05-修改后的代码" class="headerlink" title="0x05 修改后的代码"></a>0x05 修改后的代码</h2><p>链接:<a href="https://pan.baidu.com/s/12ir2s4aq9qQOa8Qj1Ov2bw" target="_blank" rel="noopener">https://pan.baidu.com/s/12ir2s4aq9qQOa8Qj1Ov2bw</a><br>密码:xi9a</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;分析一个”消灭糖果”游戏APP的代码.&lt;/p&gt;
    
    </summary>
    
      <category term="Android逆向分析" scheme="http://yoursite.com/categories/Android%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/"/>
    
    
      <category term="APP逆向" scheme="http://yoursite.com/tags/APP%E9%80%86%E5%90%91/"/>
    
  </entry>
  
  <entry>
    <title>逛微博看漫画引发的深思</title>
    <link href="http://yoursite.com/2018/08/18/%E9%80%9B%E5%BE%AE%E5%8D%9A%E7%9C%8B%E6%BC%AB%E7%94%BB%E5%BC%95%E5%8F%91%E7%9A%84%E6%B7%B1%E6%80%9D/"/>
    <id>http://yoursite.com/2018/08/18/逛微博看漫画引发的深思/</id>
    <published>2018-08-18T12:40:16.000Z</published>
    <updated>2018-10-28T08:21:24.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0x00-简介"><a href="#0x00-简介" class="headerlink" title="0x00 简介"></a>0x00 简介</h2><p>本文叙写了一个分析网站协议，并制作简易APP的全过程。</p><a id="more"></a><h2 id="0x01-背景简述"><a href="#0x01-背景简述" class="headerlink" title="0x01 背景简述"></a>0x01 背景简述</h2><p>世界是物质的,物质是运动的.</p><p>作为高举社会主义道路伟大旗帜的新世纪青年,要有一颗永不言弃的精神,以及一个没有几个硬币的钱包.冲会员这种事情是不可能去冲的,这辈子都不会去冲.  [会员真爽.jpg]</p><p>所以在面对VIP专享资源时,是万万不能向资本主义低头的。</p><p>今天在微博上看到1个漫画,非常好看.</p><p>微博上的原图看起来是这样子的:<br><img src="逛微博看漫画引发的深思/psb.png" alt=""></p><p>点开一看居然这么好看!!!!!!!!!</p><p>但是看到第七节的时候….</p><p><img src="http://a1.qpic.cn/psb?/V11pFFAV3MNfza/PpxIXQwGHK4WBIwhxhrlPQ.Rm1hw7OkGom1.qbpo6k0!/b/dPQAAAAAAAAA&amp;ek=1&amp;kp=1&amp;pt=0&amp;bo=YAOABGADgAQDUHU!&amp;tl=1&amp;su=0130410113&amp;tm=1534593600&amp;sce=0-12-12&amp;rf=2-9" alt=""></p><p>这就很尴尬了,居然让我去关注？</p><p>…….于是我就去关注了下</p><p><img src="http://a1.qpic.cn/psb?/V11pFFAV3MNfza/G002ALVigyoIo*HyP7lb4m7QQIcYjqxE4MhweP3u*84!/b/dGwBAAAAAAAA&amp;ek=1&amp;kp=1&amp;pt=0&amp;bo=OAShBfYEngYDIPc!&amp;tl=1&amp;su=035309105&amp;tm=1534593600&amp;sce=0-12-12&amp;rf=2-9" alt=""></p><p>两个公众号是一个漫画的,这是之前的图</p><p>点进去链接一看:</p><p><img src="http://a1.qpic.cn/psb?/V11pFFAV3MNfza/tjCDFW4iNfhPBchKoCW3rZDYVj0hb251ldaNXWH49L0!/b/dPQAAAAAAAAA&amp;ek=1&amp;kp=1&amp;pt=0&amp;bo=OAShBfYEngYDYLc!&amp;tl=1&amp;su=0174473953&amp;tm=1534593600&amp;sce=0-12-12&amp;rf=2-9" alt=""></p><p>很好,找到了漫画的名称.但是这种东西我不信是免费的,所以我还得找免费的网站看</p><p>(不建议看D版 有条件的还是去支持一下原作 但是这种盗版网站我是一定要制裁的!!)</p><p>于是去百度一下:</p><p><img src="http://a1.qpic.cn/psb?/V11pFFAV3MNfza/tMvRe4wZOcehZfiCBCHrTQB400*ECvZVa*6mbOQN.0A!/b/dAwBAAAAAAAA&amp;ek=1&amp;kp=1&amp;pt=0&amp;bo=OASgBQAGAAgDQPI!&amp;tl=1&amp;su=0217961073&amp;tm=1534593600&amp;sce=0-12-12&amp;rf=2-9" alt=""></p><p>从页面上得到了1个信息:</p><p>这个漫画的名称别名有两个,第一个叫&lt;没关系是爱情啊&gt;,第二个叫&lt;染指成婚&gt;.</p><p>第一个去搜了下,是一个韩国偶像电视剧,无感.</p><p>于是去搜了下第二个关键key.</p><p><img src="http://a3.qpic.cn/psb?/V11pFFAV3MNfza/KKxSNKOr54MYd*zfczDrU.xbk*CVvGsK3F0m8OtGgSI!/b/dH4BAAAAAAAA&amp;ek=1&amp;kp=1&amp;pt=0&amp;bo=OASgBQAGAAgDMII!&amp;tl=1&amp;su=0234996737&amp;tm=1534593600&amp;sce=0-12-12&amp;rf=2-9" alt=""></p><p>得到了信息.</p><p>此处我选择了第一个,估计下面的也一样.</p><p><img src="http://a4.qpic.cn/psb?/V11pFFAV3MNfza/JSenUvQZwozn9.ftczPnDTr0aER8Lymr7X2ha6xUeiQ!/b/dN8AAAAAAAAA&amp;ek=1&amp;kp=1&amp;pt=0&amp;bo=OAShBQAAAAAREL8!" alt=""></p><blockquote><p>下面有很多小广告,往下拉还有javascript脚本会自动向下翻页面,我再往上拉想点击 [下一页] 的时候发现根本无法翻上去,只能看小广告！流氓广告网站…</p></blockquote><p>这个不能忍.</p><p>这个网站,缺少社会人的毒打.jpg.</p><p>我尝试使用科学的方法来解决它:作为一个21世纪普通的大学生，决定自己动手做一个漫画App专门看这个网站的漫画!</p><h2 id="0x02-分析网站协议"><a href="#0x02-分析网站协议" class="headerlink" title="0x02 分析网站协议"></a>0x02 分析网站协议</h2><p>首先我们需要知道网站如何将漫画传送到我们的设备上.</p><p>在电脑上打开这个网站,他看起来是这样子的:</p><p><img src="http://a1.qpic.cn/psb?/V11pFFAV3MNfza/QaeBJPUywt3IQMAAfFuzgSFT6DXdEfWahckqNzTfsmM!/b/dPQAAAAAAAAA&amp;ek=1&amp;kp=1&amp;pt=0&amp;bo=9AS0AgAAAAAREGE!&amp;tl=3&amp;su=077816049&amp;tm=1534593600&amp;sce=0-12-12&amp;rf=2-9" alt=""><br>太恐怖了兄弟.今天我第一次打开这网站,居然拦截了204个小广告!!</p><p>安排,必须安排掉这个网站.</p><p>简单看下数据包:</p><p><img src="http://a1.qpic.cn/psb?/V11pFFAV3MNfza/uH0vPtI8.XctpNAQFn21MqaGSp3MY58KS8wQsUqXcko!/b/dPQAAAAAAAAA&amp;ek=1&amp;kp=1&amp;pt=0&amp;bo=9AS0AvQEtAIDQGU!&amp;tl=1&amp;su=026526833&amp;tm=1534593600&amp;sce=0-12-12&amp;rf=2-9" alt=""></p><p>这个数据很显然是得到了,我们看下网址</p><p><img src="http://a1.qpic.cn/psb?/V11pFFAV3MNfza/Dio33yMjRvbEOkc2OnYqi4NSOYsKxBypbPUm6DnGaG8!/b/dAwBAAAAAAAA&amp;ek=1&amp;kp=1&amp;pt=0&amp;bo=UQK7AFECuwADEDU!&amp;tl=1&amp;su=070663089&amp;tm=1534593600&amp;sce=0-12-12&amp;rf=2-9" alt=""></p><p>数据来源于这个网站,现在我们再看这个网址从何而来</p><p>简单搜索了下本地缓存,没有看到攻击目标.</p><p><img src="http://a2.qpic.cn/psb?/V11pFFAV3MNfza/F2m8tT3uDn1rFqncZCdbNso0mrdvigMdwMI7z6fYR6w!/b/dIUBAAAAAAAA&amp;ek=1&amp;kp=1&amp;pt=0&amp;bo=0ANVAdADVQEDEDU!&amp;tl=1&amp;su=042730465&amp;tm=1534593600&amp;sce=0-12-12&amp;rf=2-9" alt=""></p><p>Not found.</p><p>于是换个方向思考.</p><p><img src="http://a1.qpic.cn/psb?/V11pFFAV3MNfza/rb5vJxC7HCB6QDzem6a5NMyFJTUnzDz4GihHIFLRSyw!/b/dOAAAAAAAAAA&amp;ek=1&amp;kp=1&amp;pt=0&amp;bo=9ATKAvQEygIDMBU!&amp;tl=1&amp;su=0204655105&amp;tm=1534593600&amp;sce=0-12-12&amp;rf=2-9" alt=""></p><blockquote><p>直接看页面源码,从代码分析.无论JS如何调用Call,必然会有痕迹.</p></blockquote><p><img src="http://a1.qpic.cn/psb?/V11pFFAV3MNfza/Wp.65JtEW6l0LSZ1ubCgqm2.emLZqg81m87c7KG8t4A!/b/dOAAAAAAAAAA&amp;ek=1&amp;kp=1&amp;pt=0&amp;bo=YwPTAGMD0wADEDU!&amp;tl=1&amp;su=0136068785&amp;tm=1534593600&amp;sce=0-12-12&amp;rf=2-9" alt=""></p><p>这一段代码定义了一个img标签,用来显示我们网页上的数据,可以看到它绑定了一个事件.</p><blockquote><p>根据我在牧院大二时在农业物联网学院蹭HTML5课学到的知识,他绑定了一个叫做a_f_qTcms_Pic_nextUrl_Href()的JavaScript方法,意思是点击这个图片后自动翻页.</p></blockquote><p>这是一个明显的攻击入口,我们几乎可以找到整个代码的入口来进行下一步分析.</p><p>但我们此处可以使用id检查来找到代码.</p><p>这个id叫:qTcms_pic,这个img的标签。</p><p>那么我们首先要知道，img标签如何在代码中动态设置src（资源图片，即漫画图片）？</p><p>方法是：getElementByID(“ID”).src = xxxx</p><p>我们先搜索一个ID：</p><p><img src="http://a1.qpic.cn/psb?/V11pFFAV3MNfza/gSJ7kYvxdsFZtsNR5WLe2gNqwk3lQ7AqM5NT7gNIsIE!/b/dIwBAAAAAAAA&amp;ek=1&amp;kp=1&amp;pt=0&amp;bo=CAKnAQgCpwEDEDU!&amp;tl=1&amp;su=0208995265&amp;tm=1534593600&amp;sce=0-12-12&amp;rf=2-9" alt=""></p><p>箭头所指处很可疑啊！</p><p>点击去看看</p><p><img src="http://a3.qpic.cn/psb?/V11pFFAV3MNfza/NswVcm*BPzFMfswMAMfVUtV4vdddLY4emmgfO2mq0NE!/b/dIIBAAAAAAAA&amp;ek=1&amp;kp=1&amp;pt=0&amp;bo=QgSwAUIEsAEDEDU!&amp;tl=1&amp;su=0260295281&amp;tm=1534593600&amp;sce=0-12-12&amp;rf=2-9" alt=""></p><p>看来是这个地方了！注释都写了是获取当前图片地址，并设置到页面上。</p><p>分别在两个地方下BreakPoint。</p><p>刷新页面：</p><p><img src="http://a2.qpic.cn/psb?/V11pFFAV3MNfza/Tr*IIjwJNoDjeGjtvaELykbUYbH47nvhttaN4y0nEc8!/b/dA0BAAAAAAAA&amp;ek=1&amp;kp=1&amp;pt=0&amp;bo=gAcYBIAHGAQDIAU!&amp;tl=1&amp;su=025272481&amp;tm=1534593600&amp;sce=0-12-12&amp;rf=2-9" alt=""></p><p>可以看到正好在图片加载前paused了代码。</p><p>看下这段代码：</p><p><img src="http://a2.qpic.cn/psb?/V11pFFAV3MNfza/IGKrP9abvHcSatY0c*NfSP5Gej3MOeI4a1PV7nzXsvE!/b/dA0BAAAAAAAA&amp;ek=1&amp;kp=1&amp;pt=0&amp;bo=*wHIAP8ByAADEDU!&amp;tl=1&amp;su=0131655201&amp;tm=1534593600&amp;sce=0-12-12&amp;rf=2-9" alt=""></p><p>这个叫qTcms_Pic_curUrl的变量得到了一个网址，这个网址很眼熟啊！这就是那个人图片的网址：</p><p><img src="http://a1.qpic.cn/psb?/V11pFFAV3MNfza/8oEURWwHDCI2Cyi*lUfBasJK1FHl**olCBXtQZk*sEo!/b/dOAAAAAAAAAA&amp;ek=1&amp;kp=1&amp;pt=0&amp;bo=3QMPAd0DDwEDEDU!&amp;tl=1&amp;su=0173020033&amp;tm=1534593600&amp;sce=0-12-12&amp;rf=2-9" alt=""></p><p>终于找到了地址哪里来的了，现在我们分析下他是如何得到的。</p><p>因为这个网址很明显不是直接明文放在页面中的，必然是加密了然后通过某些算法解析出来。</p><p>getPicUrlP这个方法非常可疑。我们点进去：</p><p><img src="http://a1.qpic.cn/psb?/V11pFFAV3MNfza/CG2TFprGMJNwEDC5NS2X3xw7f2gycP80WHIvwVWf9S8!/b/dPQAAAAAAAAA&amp;ek=1&amp;kp=1&amp;pt=0&amp;bo=5gE4AeYBOAEDEDU!&amp;tl=1&amp;su=0232031937&amp;tm=1534593600&amp;sce=0-12-12&amp;rf=2-9" alt=""></p><p>可以看到：</p><p>1 这个网址不是在这里解密的，应该再上一步。</p><p>2 这个地方只是很简单的处理了其他信息。</p><p><img src="http://a1.qpic.cn/psb?/V11pFFAV3MNfza/QGIWsriICqFl2K4OzwjkOQr9q7Q7MRegsDFCSzjSQs4!/b/dOAAAAAAAAAA&amp;ek=1&amp;kp=1&amp;pt=0&amp;bo=EAVhABAFYQADEDU!&amp;tl=1&amp;su=0166163025&amp;tm=1534593600&amp;sce=0-12-12&amp;rf=2-9" alt=""></p><blockquote><p>这个直接就是明文了, 我们搜一下这个murl在哪里被赋值:</p></blockquote><p><img src="http://a1.qpic.cn/psb?/V11pFFAV3MNfza/tXsN0hP*UmDdC5y.9DUiaIUtNqdAUjWthI3bR9d4X1I!/b/dPQAAAAAAAAA&amp;ek=1&amp;kp=1&amp;pt=0&amp;bo=KgOsASoDrAEDEDU!&amp;tl=1&amp;su=018629873&amp;tm=1534593600&amp;sce=0-12-12&amp;rf=2-9" alt=""></p><p>一番搜索,发现了这里.在这里,他明确的定义了这个变量等于空字符串.</p><p>656行处,他被赋值,这是第一次赋值.</p><p><img src="http://a2.qpic.cn/psb?/V11pFFAV3MNfza/nrzt5WhkMBKNBWQlFIXwmqlW61v4LVAlQrlwK6vRfqI!/b/dIUBAAAAAAAA&amp;ek=1&amp;kp=1&amp;pt=0&amp;bo=GQVRABkFUQADEDU!&amp;tl=1&amp;su=0163466753&amp;tm=1534593600&amp;sce=0-12-12&amp;rf=2-9" alt=""></p><p>执行了下,发现是从这个地方来的.</p><p>我们先不管decode是什么方法,我们主要关注这个qTcms_S_m_murl_e:</p><p><img src="http://a1.qpic.cn/psb?/V11pFFAV3MNfza/hAOmdbNuXFm9By60*Klwjndaq64JhQX0lAaQQbRiwok!/b/dOAAAAAAAAAA&amp;ek=1&amp;kp=1&amp;pt=0&amp;bo=FQVUABUFVAADEDU!&amp;tl=1&amp;su=075327233&amp;tm=1534593600&amp;sce=0-12-12&amp;rf=2-9" alt=""></p><p>很有点可疑的密文,谁也看不懂.</p><p>那么这个又是从哪来的?</p><p><img src="http://a1.qpic.cn/psb?/V11pFFAV3MNfza/dfJTUwNWkOXTm370ceQBK7Q8kG4l2DLvhdciBxVpxBg!/b/dPQAAAAAAAAA&amp;ek=1&amp;kp=1&amp;pt=0&amp;bo=PAXRATwF0QEDEDU!&amp;tl=1&amp;su=098564737&amp;tm=1534593600&amp;sce=0-12-12&amp;rf=2-9" alt=""></p><p>搜索一下后，点击进去发现在页面上.</p><p><img src="http://a4.qpic.cn/psb?/V11pFFAV3MNfza/zUCQheIdfRClBXm2mxz.ncIPJviO1ixlfykJK4Q4rVA!/b/dAsBAAAAAAAA&amp;ek=1&amp;kp=1&amp;pt=0&amp;bo=tgEKAbYBCgEDEDU!&amp;tl=1&amp;su=0204850273&amp;tm=1534593600&amp;sce=0-12-12&amp;rf=2-9" alt=""></p><p>原来如此!!这个数据是网页被加载时固定的赋值.</p><p><img src="http://a1.qpic.cn/psb?/V11pFFAV3MNfza/gys*pi3MzTgGU3SkIEm2m0OH4aRE.HocIfyfwcHhVrs!/b/dOAAAAAAAAAA&amp;ek=1&amp;kp=1&amp;pt=0&amp;bo=gAcCBIAHAgQDEDU!&amp;tl=1&amp;su=0162349409&amp;tm=1534593600&amp;sce=0-12-12&amp;rf=2-9" alt=""></p><p>简单查看了下页面源码,确实是固定的.</p><p>那么现在我们得到了下列信息:</p><p>1 我们看到的漫画网址是被加密的</p><p>2 我们需要解密后才能知道这个原文.</p><p>3 漫画接口:<a href="http://mhpic.dongzaojiage.com/UploadFiles6/z/201712817732548.jpg" target="_blank" rel="noopener">http://mhpic.dongzaojiage.com/UploadFiles6/z/201712817732548.jpg</a></p><p>红色部分是动态解密得到的,所以我们需要安排它.前面黑色部分是固定域名.</p><p>回到刚才的地方,他是被加密的,所以我们需要解密,那么解密算法在哪里?</p><p><img src="http://a3.qpic.cn/psb?/V11pFFAV3MNfza/K2y*fdJkvBVRDPck6UbTsKvx9wySDwXPjeA*8ETHbvc!/b/dNoAAAAAAAAA&amp;ek=1&amp;kp=1&amp;pt=0&amp;bo=kgKRAZICkQEDEDU!&amp;tl=1&amp;su=0167981985&amp;tm=1534593600&amp;sce=0-12-12&amp;rf=2-9" alt=""></p><p>好像很复杂,我们尝试在Java中实现.</p><p>Eclipse,启动.</p><h2 id="0x03-反写解析算法"><a href="#0x03-反写解析算法" class="headerlink" title="0x03 反写解析算法"></a>0x03 反写解析算法</h2><p>严格来讲,Base64算不得加密.</p><p>所以我直接一句代码解析:</p><p><img src="http://a3.qpic.cn/psb?/V11pFFAV3MNfza/.Sqcqx0DmQ08OQ3aVDahcRaVUqhGIJl7idk3ULeCU4A!/b/dAoBAAAAAAAA&amp;ek=1&amp;kp=1&amp;pt=0&amp;bo=gAcYBIAHGAQDIAU!&amp;tl=1&amp;su=0124881345&amp;tm=1534593600&amp;sce=0-12-12&amp;rf=2-9" alt=""></p><p>可以看到和网页上返回一致.</p><p>这里面的分隔符‘$qingtiandy$’用来分割这一话中所有图片,所以我们需要分别处理.</p><p>到这里基本就分析完这个网站的图片的加载和处理过程,下面开始制作一个APP专门看漫画.</p><h2 id="0x04-制作APP"><a href="#0x04-制作APP" class="headerlink" title="0x04 制作APP"></a>0x04 制作APP</h2><hr><blockquote><p>关于APP：</p><ol><li>MVP架构设计</li><li>Volley网络请求加载漫画数据</li><li>看完当前话自动加载下一话直到全部看完</li><li>没看写多少行，估计也就3000多行代码左右而已</li><li>作者牛逼。</li><li>代码开源地址：<a href="https://github.com/QiuChenly/ComicParse" target="_blank" rel="noopener">丶我跳转</a></li></ol></blockquote><hr><p>过程简略我就不多解释,这里就给一些关键截图.</p><p>花费时间：一天半（哈哈哈有大半天我在一边看《绝对权力》一边Coding.jpg）</p><p>各种数据解析类</p><p><img src="http://a4.qpic.cn/psb?/V11pFFAV3MNfza/MEdRUXFl7yuyIDFL1k2380MRVzNQ7VsW85OLU8EUK.c!/b/dN8AAAAAAAAA&amp;ek=1&amp;kp=1&amp;pt=0&amp;bo=9ATJAvQEyQIDQGU!&amp;tl=1&amp;su=0198484401&amp;tm=1534593600&amp;sce=0-12-12&amp;rf=2-9" alt=""></p><p><img src="http://a1.qpic.cn/psb?/V11pFFAV3MNfza/4TvbzKLreTgQxa2UXHuJZv.L36xU*s2BNESXTkYVbvE!/b/dPQAAAAAAAAA&amp;ek=1&amp;kp=1&amp;pt=0&amp;bo=9ATJAvQEyQIDMBU!&amp;tl=1&amp;su=0105784369&amp;tm=1534593600&amp;sce=0-12-12&amp;rf=2-9" alt=""></p><p>APP成品预览：</p><p><img src="http://a3.qpic.cn/psb?/V11pFFAV3MNfza/2b7YcHXJBOGJwkEVwqQ8p0AtR7VstxQkB.XrWyiifOQ!/b/dN4AAAAAAAAA&amp;ek=1&amp;kp=1&amp;pt=0&amp;bo=OASABzgEgAcDcFU!&amp;tl=1&amp;su=015439665&amp;tm=1534593600&amp;sce=0-12-12&amp;rf=2-9" alt=""><br><img src="http://a1.qpic.cn/psb?/V11pFFAV3MNfza/*AflDVZzPaO5to2YuhuX6acy9Sz1HcIr0ShsA*LVlx4!/b/dGwBAAAAAAAA&amp;ek=1&amp;kp=1&amp;pt=0&amp;bo=OASABzgEgAcDMBU!&amp;tl=1&amp;su=023048977&amp;tm=1534593600&amp;sce=0-12-12&amp;rf=2-9" alt=""><br><img src="http://a1.qpic.cn/psb?/V11pFFAV3MNfza/RZzsHJS14fjupKoL7yHhqDoIwOvmLJ0Vt26pIAmqg3Y!/b/dOAAAAAAAAAA&amp;ek=1&amp;kp=1&amp;pt=0&amp;bo=OASABzgEgAcDQGU!&amp;tl=1&amp;su=0209016721&amp;tm=1534593600&amp;sce=0-12-12&amp;rf=2-9" alt=""><br><img src="http://a3.qpic.cn/psb?/V11pFFAV3MNfza/XdEeFvnIcnpexQFMXmy*H6vv.BzlLwYD117.Uc9FoRE!/b/dNoAAAAAAAAA&amp;ek=1&amp;kp=1&amp;pt=0&amp;bo=OASABzgEgAcDYEU!&amp;tl=1&amp;su=0218048945&amp;tm=1534593600&amp;sce=0-12-12&amp;rf=2-9" alt=""></p><h2 id="0x05-总结"><a href="#0x05-总结" class="headerlink" title="0x05 总结"></a>0x05 总结</h2><h3 id="日常总结。"><a href="#日常总结。" class="headerlink" title="日常总结。"></a>日常总结。</h3><ul><li>本次分析耗时一天半，含制作APP时间。</li><li>本次分析复习了以前大三在牧院时自学的Android开发技术，以及锻炼了JavaScript静态分析动态调试的基本功，作为逆向工程人员，还是有必要的。其中，android开发中还学习到了新的MVP设计框架技术，并成功运用到项目中。</li><li>不足之处： 技术还是太差了，代码编写速度太慢，思考问题不够100%全面。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;0x00-简介&quot;&gt;&lt;a href=&quot;#0x00-简介&quot; class=&quot;headerlink&quot; title=&quot;0x00 简介&quot;&gt;&lt;/a&gt;0x00 简介&lt;/h2&gt;&lt;p&gt;本文叙写了一个分析网站协议，并制作简易APP的全过程。&lt;/p&gt;
    
    </summary>
    
      <category term="Android开发" scheme="http://yoursite.com/categories/Android%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="APP开发" scheme="http://yoursite.com/tags/APP%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
</feed>
